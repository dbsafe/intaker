name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(VersionMajor).$(VersionMinor).$(VersionPatch).$(Build.BuildId)$(PrereleaseLabel)

variables:
  - name: _version
    value: $(VersionMajor).$(VersionMinor).$(VersionPatch).$(Build.BuildId)
  - name: _packageVersion
    value: $(_version)$(PrereleaseLabel)
  - name: _publishNugetPackages
    value: $[or(eq(variables['PrereleaseLabel'], ''), eq(variables['PrereleaseLabel'], '-beta'))]

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo $(Build.BuildNumber)
- script: echo $(_publishNugetPackages)

- script: dotnet build ./DataProcessor /warnaserror --configuration Release -p:Version=$(_version) -p:PackageVersion=$(_packageVersion) -p:PackageOutputPath=$(Build.ArtifactStagingDirectory)
  displayName: Build solution      

- task: DotNetCoreCLI@2
  displayName: Execute tests
  inputs:
    command: 'test'
    workingDirectory: ./DataProcessor

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), eq(variables._publishNugetPackages, 'true'))
  displayName: 'Publish Artifact'
  inputs:
    ArtifactName: '$(Build.BuildNumber)'
    
- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables._publishNugetPackages, 'true'))
  displayName: 'Publish NuGet Packages'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget-specflow-helpers'    